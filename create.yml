---
- name: Create IBM Cloud VPC VSI
  gather_facts: off
  hosts: localhost
  vars:
    tower_node: []
    db_node: []
  collections:
  - ibm.cloudcollection
  tasks:
    - name: Fetch the variables from var file
      include_vars:
        file: vars.yml
      tags: debug

    - name: Set install_tower if only scenario was passed
      set_fact:
        install_tower: true
      when: scenario is defined and scenario not in ["plain-nodes", "custom"]

    - name: Fetch the tower variables from var file
      include_vars:
        file: install_tower_vars.yml
      when: install_tower|default(false)
      tags: debug

    - name: Fail if missing EE
      fail:
        msg: You are running on a nightly build, you need to set the global_ee and control_plane_ee
      when: "install_tower|default(false)|bool and 'nightlies' in installation_tarball and (global_ee is not defined or control_plane_ee is not defined)"

    - name: Print some debug information
      vars:
        msg: |
          Requested Topology:
          --------------------------------
          Scenario: {{ scenario|default("None selected") }}

          Plain IBM Hosts
          --------------------------------
          Plain Hosts: {{ ibmcloud_vsi_count|default("None set") if not install_tower|default(false)|bool else 0 }}
          Image ID: {{ ibmcloud_vsi_image_id|default("None set") }}
          Image profile: {{ ibmcloud_vsi_profile|default("None set") }}
          Region: {{ ibmcloud_vpc_region|default("None set") }}

      debug:
        msg: "{{ msg.split('\n') }}"
      when: not (install_tower|default(false)|bool)
      tags: debug
      ignore_errors: True

    - name: Print some debug information
      vars:
        msg: |
          Requested Topology:
          --------------------------------
          Scenario: {{ scenario|default("None selected") }}
          Inventory Template: {{ inventory_template|default("None set") }}
          Installation tarball: {{ installation_tarball }}

          Plain IBM Hosts
          --------------------------------
          Plain Hosts: {{ ibmcloud_vsi_count|default("None set") if not install_tower|default(false)|bool else 0 }}
          Image ID: {{ ibmcloud_vsi_image_id|default("None set") }}
          Image profile: {{ ibmcloud_vsi_profile|default("None set") }}
          Region: {{ ibmcloud_vpc_region|default("None set") }}

          Control Plane:
          --------------------------------
          Control Nodes: {{ tower_control_nodes|default("None set") if install_tower|default(false)|bool else 0}}
          Hybrid Nodes: {{ tower_hybrid_nodes|default("None set") if install_tower|default(false)|bool else 0 }}
          Total Control Plane Nodes to deploy: {{ ibmcloud_vsi_count|default("None set") if install_tower|default(false)|bool else 0 }}
          Image ID: {{ ibmcloud_vsi_image_id|default("None set") }}
          Image profile: {{ ibmcloud_vsi_profile|default("None set") }}
          Region: {{ ibmcloud_vpc_region|default("None set") }}

          Execution Plane:
          --------------------------------
          Hop Nodes: {{ tower_hop_nodes|default("None set") }}
          Execution Nodes: {{ tower_execution_nodes|default("None set") }}
          Total nodes to deploy for execution plane: {{ ibmcloud_vsi_execution_instance_count|default("None set") }}
          Enable execution nodes: {{ install_execution_node|default("None set") }}
          Image ID: {{ ibmcloud_vsi_execution_image_id|default("None set") }}
          Image profile: {{ ibmcloud_vsi_execution_profile|default("None set") }}
          Region: {{ ibmcloud_vpc_execution_region|default("None set") }}

          Isolated Nodes:
          --------------------------------
          Legacy Isolated Nodes requested: {{ tower_isolated_nodes|default("None set") }}
          Legacy Isolated Nodes to deploy: {{ ibmcloud_vsi_iso_instance_count|default("None set") }}
          Enable legacy isolated nodes: {{ install_iso|default("None set") }}
          Image ID: {{ ibmcloud_vsi_iso_image_id|default("None set") }}
          Image profile: {{ ibmcloud_vsi_iso_profile|default("None set") }}
          Region: {{ ibmcloud_vpc_iso_region|default("None set") }}

      debug:
        msg: "{{ msg.split('\n') }}"
      when: install_tower|default(false)|bool
      tags: debug
      ignore_errors: True

    - name: Configure VPC
      include_role:
        name: configure_vpc
      vars:
        name_prefix: "{{ ibmcloud_vpc_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_region }}"

    - name: Configure VPC Subnet
      include_role:
        name: configure_vpc_subnet
      vars:
        name_prefix: "{{ ibmcloud_vpc_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_region }}"

    - name: Configure SSH Key
      include_role:
        name: configure_ssh
      vars:
        name_prefix: "{{ ibmcloud_vpc_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_region }}"

    - name: Install the VM's for Tower
      include_tasks: create_vsi.yml
      loop: "{{ range(1, ic_instance |int + 1, 1)|list }}"
      vars:
        name_prefix: "{{ ibmcloud_vpc_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_region }}"
        vsi_profile: "{{ ibmcloud_vsi_profile }}"
        image_id: "{{ ibmcloud_image_ids[ibmcloud_vpc_region][ibmcloud_image] }}"
        ic_instance: "{{ ibmcloud_vsi_count }}"

    - name: Install the VM's for Database
      include_tasks: create_vsi.yml
      loop: "{{ range(ic_instance|int + 1, ic_instance|int + 2, 1)|list }}"
      vars:
        name_prefix: "{{ ibmcloud_vpc_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_region }}"
        vsi_profile: "{{ ibmcloud_vsi_db_profile }}"
        image_id: "{{ ibmcloud_image_ids[ibmcloud_vpc_region][ibmcloud_image] }}"
        ic_instance: "{{ ibmcloud_vsi_count }}"
      when: install_tower|default(false)| bool

    - name: Save Floating IP's of Tower of Database
      set_fact:
        tower_node: "{{ ibmcloud_vsi_node[:ibmcloud_vsi_count|int:] }}"
        cacheable: True

    - name: Save Floating IP's of Tower of Database
      set_fact:
        db_node: "{{ [ ibmcloud_vsi_node[-1] ] }}"
        cacheable: True
      when: install_tower|default(false)| bool

    - name: Configure Security Group Rule
      include_role:
        name: configure_security_group
      vars:
        name_prefix: "{{ ibmcloud_vpc_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_region }}"

    - name: Add VM's to Tower and Database group
      include_role:
        name: add_hosts
      when: install_tower|default(false)| bool

    - name: Print IBM Cloud Instance Floating IPs
      debug:
        msg:
          - "IC instance Floating IP: "
          - "{{ ibmcloud_vsi_node }}"

- name: Create IBM Cloud VPC VSI for Tower Isolated Nodes
  hosts: localhost
  gather_facts: off
  vars:
    iso_node: []
  collections:
  - ibm.cloudcollection
  tasks:
  - name: Should I Install Isolated Nodes ??
    when: install_iso|default(false)|bool and ibmcloud_vsi_iso_instance_count|int > 0
    block:
    - name: Fetch the variables from var file
      include_vars:
        file: vars.yml

    - name: Configure VPC
      include_role:
        name: configure_vpc
      vars:
        name_prefix: "{{ ibmcloud_vpc_iso_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_iso_region }}"

    - name: Configure VPC Subnet
      include_role:
        name: configure_vpc_subnet
      vars:
        name_prefix: "{{ ibmcloud_vpc_iso_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_iso_region }}"

    - name: Configure SSH Key
      include_role:
        name: configure_ssh
      vars:
        name_prefix: "{{ ibmcloud_vpc_iso_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_iso_region }}"

    - name: Install the VM's for Isolated Nodes
      include_tasks: create_vsi.yml
      loop: "{{ range(1, ic_instance |int + 1, 1)|list }}"
      vars:
        name_prefix: "{{ ibmcloud_vpc_iso_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_iso_region }}"
        vsi_profile: "{{ ibmcloud_vsi_iso_profile }}"
        image_id: "{{ ibmcloud_image_ids[ibmcloud_vpc_iso_region][ibmcloud_image] }}"
        ic_instance: "{{ ibmcloud_vsi_iso_instance_count }}"

    - name: Save Floating IP's of Isolated Nodes
      set_fact:
        iso_node: "{{ ibmcloud_vsi_node[ibmcloud_vsi_count|int + 1::] }}"
        cacheable: True

    - name: Configure Security Group Rule
      include_role:
        name: configure_security_group
      vars:
        name_prefix: "{{ ibmcloud_vpc_iso_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_iso_region }}"

    - name: Add VM's to Isolated group
      include_role:
        name: add_iso_hosts
      when: install_tower | default(true) | bool

    - name: Print IBM Cloud Instance Floating IPs
      debug:
        msg:
          - "IC instance Floating IP: "
          - "Isolated Nodes: {{ iso_node }}"

- name: Create IBM Cloud VPC VSI for Tower Execution Nodes
  hosts: localhost
  gather_facts: off
  vars:
    execution_node: []
  collections:
  - ibm.cloudcollection
  tasks:
  - name: Should I Install Execution Nodes ??
    when: install_execution_node|default(false)|bool and ibmcloud_vsi_execution_instance_count|int > 0
    block:
    - name: Fetch the variables from var file
      include_vars:
        file: vars.yml

    - name: Configure VPC
      include_role:
        name: configure_vpc
      vars:
        name_prefix: "{{ ibmcloud_vpc_execution_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_execution_region }}"

    - name: Configure VPC Subnet
      include_role:
        name: configure_vpc_subnet
      vars:
        name_prefix: "{{ ibmcloud_vpc_execution_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_execution_region }}"

    - name: Configure SSH Key
      include_role:
        name: configure_ssh
      vars:
        name_prefix: "{{ ibmcloud_vpc_execution_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_execution_region }}"

    - name: Install the VM's for Execution Nodes
      include_tasks: create_vsi.yml
      loop: "{{ range(1, ic_instance |int + 1, 1)|list }}"
      vars:
        name_prefix: "{{ ibmcloud_vpc_execution_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_execution_region }}"
        vsi_profile: "{{ ibmcloud_vsi_execution_profile }}"
        image_id: "{{ ibmcloud_image_ids[ibmcloud_vpc_execution_region][ibmcloud_image] }}"
        ic_instance: "{{ ibmcloud_vsi_execution_instance_count }}"

    - name: Calculate execution node start index in list of IPs
      set_fact:
        execution_node_start_indx: "{{ (ibmcloud_vsi_node|length - ibmcloud_vsi_execution_instance_count|int) | int }}"

    - name: Save Floating IP's of Execution Nodes
      set_fact:
        execution_node: "{{ ibmcloud_vsi_node[(execution_node_start_indx|int)::] }}"
        cacheable: True

    - name: Configure Security Group Rule
      include_role:
        name: configure_security_group
      vars:
        name_prefix: "{{ ibmcloud_vpc_execution_name_prefix }}"
        ibmcloud_ic_region: "{{ ibmcloud_vpc_execution_region }}"

    - name: Add VM's to execution group
      include_role:
        name: add_exec_hosts
      when: install_tower | default(true) | bool

    - name: Print IBM Cloud Instance Floating IPs
      debug:
        msg:
          - "IC instance Floating IP: "
          - "Execution Nodes: {{ execution_node }}"

- name: Check Ansible connection to new DEMO VSI
  hosts: tower database
  gather_facts: False
  tasks:
    - name: Wait for VSI to become reachable over SSH
      wait_for_connection:

- name: Add team ssh keys
  hosts: tower database
  gather_facts: True
  tasks:
    - name: Add towerperf team member keys
      include_role:
        name: auth_keys

- name: Install Tower
  hosts: tower[0]
  gather_facts: False
  tasks:
    - name: Fetch the variables from var file
      include_vars:
        file: vars.yml

    - name: Fetch the tower variables from var file
      include_vars:
        file: install_tower_vars.yml

    - name: Fetch more tower vars
      include_vars:
        file: tower_vars.yml

    - name: Fetch the vaulted variables
      include_vars:
        file: config/credential.vault

    - name: Copy the towerperf ssh private key
      include_role:
        name: copy_key

    - name: Install Tower
      include_role:
        name: install_tower
